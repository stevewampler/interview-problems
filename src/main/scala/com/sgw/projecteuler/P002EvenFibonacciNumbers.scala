package com.sgw.projecteuler

/**
 * From: https://projecteuler.net/problem=2
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
object P002EvenFibonacciNumbers {
   def fib(max: Int, acc: List[Int] = List[Int](), p1: Int = 0, p2: Int = 1): List[Int] = {
     val p = p1 + p2

     if (p > max)
       acc
     else
       fib(max, p :: acc, p2, p)
   }

   def main(args: Array[String]) {
     val answer = fib(4000000).filter(_ % 2 == 0).sum

     assert(answer == 4613732)

     println(answer)
   }
}
